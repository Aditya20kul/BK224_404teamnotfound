# -*- coding: utf-8 -*-
"""SIH_ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S0HSg5HMwjjqVWfVOTYFqAE-EmPmL67C
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
from tensorflow.keras.models  import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.callbacks import ModelCheckpoint 
import pandas as pd
# %cd drive/My\ Drive/SIH

df=pd.read_excel('ANN_sih_Data.xls')
df.head()    
train=df[['Thi','Tci','Tho','Tco','U','LMTD','Q_Actual','Q_Ideal']]
y=df[['Efficiency']]

NN_model = Sequential()

# The Input Layer :
NN_model.add(Dense(128, kernel_initializer='normal',input_shape=train.shape[1:], activation='relu'))

# The Hidden Layers :
NN_model.add(Dense(256, kernel_initializer='normal',activation='relu'))
NN_model.add(Dense(128, kernel_initializer='normal',activation='relu'))
NN_model.add(Dense(64, kernel_initializer='normal',activation='relu'))
NN_model.add(Dense(64, kernel_initializer='normal',activation='relu'))
NN_model.add(Dense(32, kernel_initializer='normal',activation='relu'))

# The Output Layer :
NN_model.add(Dense(1, kernel_initializer='normal',activation='linear'))

# Compile the network :
NN_model.compile(loss='mean_absolute_error', optimizer='adam', metrics=['mean_absolute_error'])
history=NN_model.fit(X,y,batch_size=40,epochs=50,validation_split=0.3)

import tensorflow.keras
from matplotlib import pyplot as plt
plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('model loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'val'], loc='upper left')
plt.show()

test1=[117.0,  45.0,  77.49029642,  64.96741834,0.2216592 , 41.49734041,  73.57899561, 195.00326432]
test1=np.array(test1).reshape(1,8)
print(NN_model.predict(test1))
print(y.iloc[0])

df.head()
X=df[['Thi','Tci','Tho','Tco','U','LMTD','Q_Actual','Q_Ideal']]

NN_model.save('ANN version 2.0.h5')

